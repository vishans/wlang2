#include <iostream>
#include <fstream>
#include "ast.h"

// Declare functions generated by Flex and Bison
extern int yyparse();
extern FILE *yyin;

extern int yydebug;

// The parsed workout object
extern Workout *parsedWorkout;

int main(int argc, char **argv) {
    yydebug = 0;
    // Check if a file is provided as an argument
    if (argc > 1) {
        // Open the file for reading
        FILE *file = fopen(argv[1], "r");
        if (!file) {
            std::cerr << "Could not open file: " << argv[1] << std::endl;
            return 1;
        }
        // Set the input stream for the lexer
        yyin = file;
    } else {
        std::cerr << "Usage: " << argv[0] << " <input file>" << std::endl;
        return 1;
    }

    // Parse the input
    if (yyparse() == 0) {
        // If parsing succeeds, print the parsed workout details
        if (parsedWorkout) {
            parsedWorkout->printWorkout();
        } else {
            std::cerr << "No workout data was parsed." << std::endl;
        }
    } else {
        std::cerr << "Parsing failed!" << std::endl;
    }

    // Clean up
    if (parsedWorkout) {
        delete parsedWorkout;
    }

    // Close the input file if opened
    if (yyin) {
        fclose(yyin);
    }

    return 0;
}